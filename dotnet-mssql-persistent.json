{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "dotnet-mssql-persistent",
    "annotations": {
      "openshift.io/display-name": ".NET Core + MSSQL (Persistent)",
      "description": "An example .NET Core application with a MSSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/redhat-developer/s2i-dotnetcore.",
      "tags": "quickstart,dotnet",
      "iconClass": "icon-dotnet",
      "template.openshift.io/provider-display-name": "Red Hat, Inc.",
      "template.openshift.io/documentation-url": "https://github.com/redhat-developer/s2i-dotnetcore",
      "template.openshift.io/support-url": "https://access.redhat.com"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/redhat-developer/s2i-dotnetcore.",
  "labels": {
    "template": "dotnet-mssql-persistent"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "DockerImage",
              "name": "registry.access.redhat.com/dotnet/dotnetcore-10-rhel7:1.0"
            },
            "env": [
              {
                "name": "DOTNET_STARTUP_PROJECT",
                "value": "${DOTNET_STARTUP_PROJECT}"
              },
              {
                "name": "DOTNET_ASSEMBLY_NAME",
                "value": "${DOTNET_ASSEMBLY_NAME}"
              },
              {
                "name": "DOTNET_NPM_TOOLS",
                "value": "${DOTNET_NPM_TOOLS}"
              },
              {
                "name": "DOTNET_TEST_PROJECTS",
                "value": "${DOTNET_TEST_PROJECTS}"
              },
              {
                "name": "DOTNET_CONFIGURATION",
                "value": "${DOTNET_CONFIGURATION}"
              },
              {
                "name": "DOTNET_PUBLISH",
                "value": "false"
              },
              {
                "name": "DOTNET_RESTORE_SOURCES",
                "value": "${DOTNET_RESTORE_SOURCES}"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          }
        ],
        "postCommit": {}
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          },
          "resources": {}
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "dotnet-mssql-persistent"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "dotnet-mssql-persistent",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "SA_PASSWORD",
                    "value": "${SA_PASSWORD}"
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "livenessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 40,
                  "timeoutSeconds": 10
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 30
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "mssql",
            "port": 1433,
            "targetPort": 1433
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${DATABASE_SERVICE_NAME}"
                }
              }
            ],
            "containers": [
              {
                "name": "mssql",
                "image": "microsoft/mssql-server-linux",
                "ports": [
                  {
                    "containerPort": 1433
                  }
                ],
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 1433
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/opt/mssql"
                  }
                ],
                "env": [
                  {
                    "name": "SA_PASSWORD",
                    "value": "${SA_PASSWORD}"
                  },
                  {
                    "name": "ACCEPT_EULA",
                    "value": "Y"
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_MSSQL_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "dotnet-mssql"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the .NET Core container can use.",
      "value": "512Mi"
    },
    {
      "name": "MEMORY_MSSQL_LIMIT",
      "displayName": "Memory Limit (MSSQL)",
      "required": true,
      "description": "Maximum amount of memory the MSSQL container can use.",
      "value": "512Mi"
    },
    {
      "name": "VOLUME_CAPACITY",
      "displayName": "Volume Capacity",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "required": true,
      "description": "The URL of the repository with your application source code.",
      "value": "https://github.com/click2cloud/dotnet-core-mssql-app.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
      "value": "master"
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository.",
      "value": "/src/dotnet-core-mssql-app"
    },
    {
      "name": "DOTNET_STARTUP_PROJECT",
      "displayName": "Startup Project",
      "description": "Set this to the folder containing your startup project."
    },
    {
      "name": "DOTNET_ASSEMBLY_NAME",
      "displayName": "Startup Assembly",
      "description": "Set this when the assembly name is overridden in the project file."
    },
    {
      "name": "DOTNET_NPM_TOOLS",
      "displayName": "Npm Tools",
      "description": "Set this to a space separated list of npm tools needed to publish."
    },
    {
      "name": "DOTNET_TEST_PROJECTS",
      "displayName": "Test projects",
      "description": "Set this to a space separated list of test projects to run before publishing."
    },
    {
      "name": "DOTNET_CONFIGURATION",
      "displayName": "Configuration",
      "description": "Set this to configuration (Release/Debug).",
      "value": "Debug"
    },
    {
      "name": "DOTNET_RESTORE_SOURCES",
      "displayName": "NuGet package sources",
      "description": "Set this to override the NuGet.config sources."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the .NET Core service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "A secret string used to configure the GitHub webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "required": true,
      "displayName": "Database Service Name",
      "value": "mssql"
    },
    {
      "name": "SA_PASSWORD",
      "displayName": "Database Password",
      "description": "Password for the MSSQL user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}",
      "required": true
    }
  ]
}